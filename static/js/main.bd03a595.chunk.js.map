{"version":3,"sources":["components/AppHeader.js","components/AppFooter.js","assets/planet.jpg","components/PlanetItem.js","components/PlanetsList.js","components/Navigation.js","components/Loader.js","hooks/http.hook.js","pages/HomePage.js","components/PlanetNotFound.js","components/Residents.js","components/PlanetDescription.js","pages/PlanetPage.js","App.js","index.js"],"names":["AppHeader","className","to","AppFooter","PlanetItem","planet","planetId","url","split","reverse","alt","src","planetImg","name","climate","population","PlanetsList","planets","map","Navigation","navigation","fetchPlanets","prevUrl","onClick","nextUrl","Loader","style","display","justifyContent","paddingTop","useHttp","useState","loading","setLoading","error","setError","request","useCallback","a","method","body","headers","JSON","stringify","newCors","newArray","newUrl","fetch","response","json","data","ok","message","clearError","HomePage","setPlanets","setNavigation","page","fetched","results","previous","next","useEffect","PlanetNotFound","Residents","residentUrl","resident","setResident","fetchResident","PlanetDescription","rotation_period","diameter","gravity","terrain","residents","populationNum","toLocaleString","console","log","PlanetPage","id","useParams","setPlanet","fetchPlanet","App","exact","path","component","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd03a595.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AppHeader = () => {\r\n  return (\r\n    <header>\r\n      <nav>\r\n        <div className=\"nav-wrapper blue-grey darken-1\">\r\n          <div className=\"container\">\r\n            <Link to='/'>StarWars</Link>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\n\r\nconst AppFooter = () => {\r\n  return (\r\n  <footer className=\"page-footer blue-grey darken-1\">\r\n    <div className=\"center-align\">\r\n      Â© 2020 Liliia Havryshchyshena\r\n    </div>\r\n  </footer>\r\n  )\r\n};\r\n\r\nexport default AppFooter;\r\n","export default __webpack_public_path__ + \"static/media/planet.4c0ccaff.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport planetImg from '../assets/planet.jpg'\r\n\r\nconst PlanetItem = ({planet}) => {\r\n  const planetId = planet.url.split(\"/\").reverse()[1];\r\n\r\n  return (\r\n    <Link to={`/planets/${planetId}`}>\r\n      <div className=\"card large\">\r\n        <div className=\"card-image\">\r\n          <img alt=\"planetImg\" src={planetImg}/>\r\n          <span className=\"card-title\">{planet.name}</span>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div><strong>Climate - </strong>{planet.climate}</div>\r\n          <div><strong>Population: </strong>{planet.population}</div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  )\r\n};\r\n\r\nPlanetItem.propTypes = {\r\n  planet:PropTypes.object,\r\n\r\n}\r\n\r\nexport default PlanetItem;\r\n","import React from 'react';\r\nimport PlanetItem from './PlanetItem'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlanetsList = ({planets}) => {\r\n  return (\r\n    <div className=\"row\">\r\n      {planets.map(planet => (\r\n        <div className=\"col s12 m6 l4 xl3\" key={planet.name}>\r\n          <PlanetItem planet={planet}/>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n};\r\n\r\nPlanetsList.propTypes = {\r\n  planets:PropTypes.array,\r\n}\r\nexport default PlanetsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Navigation = ({navigation, fetchPlanets}) => {\r\n  return (\r\n    <div className=\"navigation\">\r\n    {navigation.prevUrl && <button className=\"waves-effect waves-light btn-large blue-grey darken-1\" onClick={()=>fetchPlanets(navigation.prevUrl)}>Prev\r\n    </button>}\r\n\r\n    {navigation.nextUrl && <button className=\"waves-effect waves-light btn-large blue-grey darken-1\" onClick={()=>fetchPlanets(navigation.nextUrl)}>Next</button>}\r\n   </div>\r\n  )\r\n};\r\n\r\nNavigation.propTypes = {\r\n  navigation:PropTypes.object,\r\n  fetchPlanets:PropTypes.func,\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div\r\n      style={{ display: 'flex', justifyContent: 'center', paddingTop: '2rem' }}\r\n    >\r\n      <div className=\"preloader-wrapper active\">\r\n        <div className=\"spinner-layer spinner-grey-only\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n          <div className=\"gap-patch\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n          <div className=\"circle-clipper right\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setLoading(true);\r\n      try {\r\n        if (body) {\r\n          body = JSON.stringify(body);\r\n          headers['Content-Type'] = 'application/json';\r\n        }\r\n        const newCors = 'https';\r\n        const newArray = url.split(\":\")[1];\r\n        const newUrl = `${newCors}:${newArray}`;\r\n        const response = await fetch(newUrl, { method, body, headers });\r\n\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          setLoading(false);\r\n          setError(true);\r\n        }\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};","import React, { useState, useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PlanetsList from '../components/PlanetsList';\r\nimport Navigation from '../components/Navigation';\r\nimport Loader from '../components/Loader';\r\n\r\nimport { useHttp } from '../hooks/http.hook';\r\n\r\nconst HomePage = () => {\r\n  const [planets, setPlanets] = useState([]);\r\n  const [navigation, setNavigation] = useState({prevUrl: null, nextUrl:null})\r\n  const { loading, request } = useHttp();\r\n\r\n  const fetchPlanets = useCallback(async (page='https://swapi.dev/api/planets/?page=1') => {\r\n\r\n    try {\r\n      const fetched = await request(page);\r\n      setPlanets(fetched.results);\r\n      setNavigation({prevUrl: fetched.previous, nextUrl: fetched.next});\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }, [request]);\r\n\r\n  useEffect(() => {\r\n    fetchPlanets();\r\n  }, [fetchPlanets]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return <>\r\n  {!loading && <div className=\"container\">\r\n        <div className=\"paddingTop\">\r\n         <Navigation navigation={navigation} fetchPlanets={fetchPlanets}/>\r\n           <PlanetsList planets={planets}/>\r\n        </div>\r\n     </div>}\r\n  </>\r\n};\r\n\r\nHomePage.propTypes = {\r\n  navigation:PropTypes.string,\r\n  fetchPlanets:PropTypes.func,\r\n  planets:PropTypes.array,\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlanetNotFound = ({error}) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-content\">\r\n              Planet not found! Try to find another one. {error}\r\n            </div>\r\n            <div className=\"card-action\">\r\n              <Link to=\"/\" className=\"waves-effect waves-light btn-large blue-grey darken-1\">Go to all planets </Link>\r\n            </div>\r\n\r\n          </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nPlanetNotFound.propTypes = {\r\n  error: PropTypes.bool,\r\n\r\n};\r\n\r\nexport default PlanetNotFound;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { useHttp } from '../hooks/http.hook';\r\n\r\nconst Residents = ({residentUrl}) => {\r\n  const [resident, setResident] = useState([]);\r\n  const { request} = useHttp();\r\n\r\n  const fetchResident = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(residentUrl);\r\n      setResident(fetched);\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }, [request, residentUrl]);\r\n\r\n  useEffect(() => {\r\n    fetchResident();\r\n  }, [fetchResident]);\r\n  return (\r\n    <div>\r\n      {resident.name}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Residents;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Residents from './Residents'\r\n\r\nconst PlanetDescription = ({planet: {name, rotation_period, diameter, climate, gravity, terrain, population, residents}}) => {\r\n  const populationNum = (+population).toLocaleString('ru');\r\n  console.log(typeof(population));\r\n  console.log(typeof(populationNum));\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s12\">\r\n        <div className=\"card horizontal\">\r\n          <div className=\"card-content\">\r\n\r\n            <h4>Detailed Information about {name}</h4>\r\n            <div><strong>Rotation Period - </strong>{rotation_period}</div>\r\n            <div><strong>diameter - </strong>{diameter}</div>\r\n            <div><strong>Ð¡limate - </strong>{climate}</div>\r\n            <div><strong>Gravity - </strong>{gravity}</div>\r\n            <div><strong>Terrain - </strong>{terrain}</div>\r\n            <div><strong>population - </strong>{populationNum}</div>\r\n            <div>\r\n              <h5>Famous residents:</h5>\r\n              {residents && residents.map(resident => <Residents key={resident} residentUrl={resident}/>)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n};\r\n\r\nPlanetDescription.propTypes = {\r\n  name:PropTypes.string,\r\n  rotation_period:PropTypes.string,\r\n  diameter:PropTypes.string,\r\n  climate:PropTypes.string,\r\n  gravity:PropTypes.string,\r\n  terrain:PropTypes.string,\r\n  population:PropTypes.string,\r\n  residents:PropTypes.array,\r\n}\r\n\r\nexport default PlanetDescription;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport PlanetNotFound from '../components/PlanetNotFound';\r\nimport PlanetDescription from '../components/PlanetDescription'\r\n\r\nconst PlanetPage = () => {\r\n  const {id} = useParams();\r\n  const [planet, setPlanet] = useState([]);\r\n  const { request, error, clearError } = useHttp();\r\n\r\n  const fetchPlanet = useCallback(async () => {\r\n    try {\r\n      clearError()\r\n      const fetched = await request(`https://swapi.dev/api/planets/${id}/`);\r\n      setPlanet(fetched);\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }, [request, clearError, id]);\r\n\r\n  useEffect(() => {\r\n    fetchPlanet();\r\n  }, [fetchPlanet]);\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {error && <PlanetNotFound error={error}/>}\r\n      {!error && <PlanetDescription planet={planet}/>}\r\n    </div>\r\n  )\r\n};\r\n\r\nPlanetPage.propTypes = {\r\n  error: PropTypes.bool,\r\n  planet:PropTypes.object,\r\n};\r\n\r\nexport default PlanetPage;\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport AppHeader from './components/AppHeader';\r\nimport AppFooter from './components/AppFooter';\r\n\r\nimport HomePage from './pages/HomePage';\r\nimport PlanetPage from './pages/PlanetPage';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <main>\r\n        <Switch>\r\n          <Route exact path='/' component={HomePage} />\r\n          <Route exact path='/planets/:id' component={PlanetPage} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </main>\r\n      <AppFooter />\r\n    </>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\n// styles\r\nimport './index.css';\r\n\r\n//components\r\nimport App from './App';\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Route component={App} />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}